{
    "filters": {
        "revapi": {
            "java": {
                "filter": {
                    "_comment": "We don't want to check transitive classes, e.g. from kie-api, since we already check them in their own module.",
                    "packages": {
                        "regex": true,
                        "include": [
                            "org\\.jbpm\\.services\\.api.*"
                        ]
                    }
                }
            }
        }
    },
    "ignores": {
        "revapi": {
            "_comment": "Changes between 7.48.0.Final and the current branch. These changes are desired and thus ignored.",
            "ignore": [
		{
		  "code": "java.method.addedToInterface",
		  "new": "method java.util.Set<java.lang.String> org.jbpm.services.api.model.ProcessDefinition::getTagsForVariable(java.lang.String)",
		  "package": "org.jbpm.services.api.model",
		  "classSimpleName": "ProcessDefinition",
		  "methodName": "getTagsForVariable",
		  "elementKind": "method",
		  "justification": "[JBPM-9548] Need access to process variables tags at FormRendererBase"
		},
              {
                "code": "java.method.addedToInterface",
                "new": "method java.util.Map<java.lang.String, java.util.Set<java.lang.String>> org.jbpm.services.api.model.ProcessDefinition::getTagsInfo()",
                "package": "org.jbpm.services.api.model",
                "classSimpleName": "ProcessDefinition",
                "methodName": "getTagsInfo",
                "elementKind": "method",
                "justification": "[AF-2811] Required Process Variable Tags shouldn't be accepted in forms when empty"
              },
                {
                  "code": "java.method.addedToInterface",
                  "new": "method java.util.Collection<org.jbpm.services.api.model.ProcessInstanceDesc> org.jbpm.services.api.RuntimeDataService::getProcessInstancesWithSubprocessByProcessInstanceId(java.lang.Long, java.util.List<java.lang.Integer>, org.kie.api.runtime.query.QueryContext)",
                  "package": "org.jbpm.services.api",
                  "classSimpleName": "RuntimeDataService",
                  "methodName": "getProcessInstancesWithSubprocessByProcessInstanceId",
                  "elementKind": "method",
                  "justification": "https://issues.redhat.com/browse/JBPM-9583"
                },
                {
                    "code": "java.method.addedToInterface",
                    "new": "method java.util.Set<java.lang.String> org.jbpm.services.api.model.ProcessDefinition::getTagsForVariable(java.lang.String)",
                    "package": "org.jbpm.services.api.model",
                    "classSimpleName": "ProcessDefinition",
                    "methodName": "getTagsForVariable",
                    "elementKind": "method",
                    "justification": "[JBPM-9548] Need access to process variables tags at FormRendererBase (kie-server-services-jbpm-ui)"
                },
                {
                    "code": "java.method.addedToInterface",
                    "new": "method java.util.Map<java.lang.String, java.lang.Object> org.jbpm.services.api.ProcessService::computeProcessOutcome(java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.Object>)",
                    "package": "org.jbpm.services.api",
                    "classSimpleName": "ProcessService",
                    "methodName": "computeProcessOutcome",
                    "elementKind": "method",
                    "justification": "[JBPM-9624] Return the process variables for synchronous execution use cases"
                },
            {
               "code": "java.method.addedToInterface",
               "new": "method java.util.Set<java.lang.String> org.jbpm.services.api.model.ProcessDefinition::getTagsForVariable(java.lang.String)",
               "package": "org.jbpm.services.api.model",
               "classSimpleName": "ProcessDefinition",
               "methodName": "getTagsForVariable",
               "elementKind": "method",
               "justification": "[JBPM-9548] Need access to process variables tags at FormRendererBase (kie-server-services-jbpm-ui)"
            },
            {
               "code": "java.method.addedToInterface",
               "new": "method void org.jbpm.services.api.admin.UserTaskAdminService::addBusinessAdmins(java.lang.String, java.lang.String, long, boolean, org.kie.api.task.model.OrganizationalEntity[]) throws org.jbpm.services.api.TaskNotFoundException",
               "package": "org.jbpm.services.api.admin",
               "classSimpleName": "UserTaskAdminService",
               "methodName": "addBusinessAdmins",
               "elementKind": "method",
               "justification": "[JBPM-9625] Allow to bypass the authenticated user in the KIE REST API that is adding users or groups as potential owners"
            },
            {
               "code": "java.method.addedToInterface",
               "new": "method void org.jbpm.services.api.admin.UserTaskAdminService::addExcludedOwners(java.lang.String, java.lang.String, long, boolean, org.kie.api.task.model.OrganizationalEntity[]) throws org.jbpm.services.api.TaskNotFoundException",
               "package": "org.jbpm.services.api.admin",
               "classSimpleName": "UserTaskAdminService",
               "methodName": "addExcludedOwners",
               "elementKind": "method",
               "justification": "[JBPM-9625] Allow to bypass the authenticated user in the KIE REST API that is adding users or groups as potential owners"
            },
            {
               "code": "java.method.addedToInterface",
               "new": "method void org.jbpm.services.api.admin.UserTaskAdminService::addPotentialOwners(java.lang.String, java.lang.String, long, boolean, org.kie.api.task.model.OrganizationalEntity[]) throws org.jbpm.services.api.TaskNotFoundException",
               "package": "org.jbpm.services.api.admin",
               "classSimpleName": "UserTaskAdminService",
               "methodName": "addPotentialOwners",
               "elementKind": "method",
               "justification": "[JBPM-9625] Allow to bypass the authenticated user in the KIE REST API that is adding users or groups as potential owners"
             },
             {
               "code": "java.method.addedToInterface",
               "new": "method void org.jbpm.services.api.admin.UserTaskAdminService::removeBusinessAdmins(java.lang.String, java.lang.String, long, org.kie.api.task.model.OrganizationalEntity[]) throws org.jbpm.services.api.TaskNotFoundException, java.lang.IllegalStateException",
               "package": "org.jbpm.services.api.admin",
               "classSimpleName": "UserTaskAdminService",
               "methodName": "removeBusinessAdmins",
               "elementKind": "method",
               "justification": "[JBPM-9625] Allow to bypass the authenticated user in the KIE REST API that is adding users or groups as potential owners"
             },
             {
               "code": "java.method.addedToInterface",
               "new": "method void org.jbpm.services.api.admin.UserTaskAdminService::removeExcludedOwners(java.lang.String, java.lang.String, long, org.kie.api.task.model.OrganizationalEntity[]) throws org.jbpm.services.api.TaskNotFoundException",
               "package": "org.jbpm.services.api.admin",
               "classSimpleName": "UserTaskAdminService",
               "methodName": "removeExcludedOwners",
               "elementKind": "method",
               "justification": "[JBPM-9625] Allow to bypass the authenticated user in the KIE REST API that is adding users or groups as potential owners"
             },
             {
               "code": "java.method.addedToInterface",
               "new": "method void org.jbpm.services.api.admin.UserTaskAdminService::removePotentialOwners(java.lang.String, java.lang.String, long, org.kie.api.task.model.OrganizationalEntity[]) throws org.jbpm.services.api.TaskNotFoundException",
               "package": "org.jbpm.services.api.admin",
               "classSimpleName": "UserTaskAdminService",
               "methodName": "removePotentialOwners",
               "elementKind": "method",
               "justification": "[JBPM-9625] Allow to bypass the authenticated user in the KIE REST API that is adding users or groups as potential owners"
             },
             {
  	       "code": "java.class.removed",
               "old": "class org.jbpm.services.api.InvalidDeploymentIdException",
   	       "package": "org.jbpm.services.api",
   	       "classSimpleName": "InvalidDeploymentIdException",
   	       "elementKind": "class",
   	       "justification": "[JBPM-9705] Able to execute process admin REST API's without valid containerID"
 	     },
             {
   	       "code": "java.method.addedToInterface",
               "new": "method void org.jbpm.services.api.admin.ProcessInstanceAdminService::cancelNodeInstance(java.lang.String, long, long) throws org.jbpm.services.api.NodeInstanceNotFoundException, org.jbpm.services.api.ProcessInstanceNotFoundException, org.jbpm.services.api.IncorrectDeploymentIDException",
               "package": "org.jbpm.services.api.admin",
               "classSimpleName": "ProcessInstanceAdminService",
               "methodName": "cancelNodeInstance",
               "elementKind": "method",
               "justification": "[JBPM-9705] Able to execute process admin REST API's without valid containerID"
             },
             {
               "code": "java.method.addedToInterface",
               "new": "method java.util.Collection<org.jbpm.services.api.model.NodeInstanceDesc> org.jbpm.services.api.admin.ProcessInstanceAdminService::getActiveNodeInstances      (java.lang.String, long) throws org.jbpm.services.api.ProcessInstanceNotFoundException, org.jbpm.services.api.IncorrectDeploymentIDException",
               "package": "org.jbpm.services.api.admin",
               "classSimpleName": "ProcessInstanceAdminService",
               "methodName": "getActiveNodeInstances",
               "elementKind": "method",
               "justification": "[JBPM-9705] Able to execute process admin REST API's without valid containerID"
             },
             {
               "code": "java.method.exception.runtimeAdded",
               "old": "method java.util.List<org.kie.internal.runtime.error.ExecutionError> org.jbpm.services.api.admin.ProcessInstanceAdminService::getErrorsByProcessInstanceId(long, boolean, org.kie.api.runtime.query.QueryContext)",
               "new": "method java.util.List<org.kie.internal.runtime.error.ExecutionError> org.jbpm.services.api.admin.ProcessInstanceAdminService::getErrorsByProcessInstanceId(long, boolean, org.kie.api.runtime.query.QueryContext) throws org.jbpm.services.api.ProcessInstanceNotFoundException",
               "exception": "org.jbpm.services.api.ProcessInstanceNotFoundException",
               "package": "org.jbpm.services.api.admin",
               "classSimpleName": "ProcessInstanceAdminService",
               "methodName": "getErrorsByProcessInstanceId",
               "elementKind": "method",
               "justification": "[JBPM-9705] Able to execute process admin REST API's without valid containerID"
             },
             {
               "code": "java.method.exception.runtimeAdded",
               "old": "method java.util.List<org.kie.internal.runtime.error.ExecutionError> org.jbpm.services.api.admin.ProcessInstanceAdminService::getErrorsByProcessInstanceId(long, java.lang.String, boolean, org.kie.api.runtime.query.QueryContext)",
               "new": "method java.util.List<org.kie.internal.runtime.error.ExecutionError> org.jbpm.services.api.admin.ProcessInstanceAdminService::getErrorsByProcessInstanceId(long, java.lang.String, boolean, org.kie.api.runtime.query.QueryContext) throws org.jbpm.services.api.ProcessInstanceNotFoundException",
               "exception": "org.jbpm.services.api.ProcessInstanceNotFoundException",
               "package": "org.jbpm.services.api.admin",
               "classSimpleName": "ProcessInstanceAdminService",
               "methodName": "getErrorsByProcessInstanceId",
               "elementKind": "method",
               "justification": "[JBPM-9705] Able to execute process admin REST API's without valid containerID"
             },
             {
               "code": "java.method.addedToInterface",
               "new": "method java.util.List<org.kie.internal.runtime.error.ExecutionError> org.jbpm.services.api.admin.ProcessInstanceAdminService::getErrorsByProcessInstanceId(java.lang.String, long, boolean, org.kie.api.runtime.query.QueryContext) throws org.jbpm.services.api.ProcessInstanceNotFoundException, org.jbpm.services.api.IncorrectDeploymentIDException",
               "package": "org.jbpm.services.api.admin",
               "classSimpleName": "ProcessInstanceAdminService",
               "methodName": "getErrorsByProcessInstanceId",
               "elementKind": "method",
               "justification": "[JBPM-9705] Able to execute process admin REST API's without valid containerID"
             },
             {
               "code": "java.method.addedToInterface",
               "new": "method java.util.List<org.kie.internal.runtime.error.ExecutionError> org.jbpm.services.api.admin.ProcessInstanceAdminService::getErrorsByProcessInstanceId(java.lang.String, long, java.lang.String, boolean, org.kie.api.runtime.query.QueryContext) throws org.jbpm.services.api.ProcessInstanceNotFoundException, org.jbpm.services.api.NodeNotFoundException, org.jbpm.services.api.IncorrectDeploymentIDException",
               "package": "org.jbpm.services.api.admin",
               "classSimpleName": "ProcessInstanceAdminService",
               "methodName": "getErrorsByProcessInstanceId",
               "elementKind": "method",
               "justification": "[JBPM-9705] Able to execute process admin REST API's without valid containerID"
             },
             {
               "code": "java.method.exception.runtimeAdded",
               "old": "method java.util.Collection<org.jbpm.services.api.admin.ProcessNode> org.jbpm.services.api.admin.ProcessInstanceAdminService::getProcessNodes(java.lang.String, long) throws org.jbpm.services.api.ProcessInstanceNotFoundException",
               "new": "method java.util.Collection<org.jbpm.services.api.admin.ProcessNode> org.jbpm.services.api.admin.ProcessInstanceAdminService::getProcessNodes(java.lang.String, long) throws org.jbpm.services.api.ProcessInstanceNotFoundException, org.jbpm.services.api.IncorrectDeploymentIDException",
               "exception": "org.jbpm.services.api.IncorrectDeploymentIDException",
               "package": "org.jbpm.services.api.admin",
               "classSimpleName": "ProcessInstanceAdminService",
               "methodName": "getProcessNodes",
               "elementKind": "method",
               "justification": "[JBPM-9705] Able to execute process admin REST API's without valid containerID"
             },
             {
               "code": "java.method.addedToInterface",
               "new": "method java.util.Collection<org.jbpm.services.api.admin.ProcessNode> org.jbpm.services.api.admin.ProcessInstanceAdminService::getProcessNodes(long) throws org.jbpm.services.api.ProcessInstanceNotFoundException",
               "package": "org.jbpm.services.api.admin",
               "classSimpleName": "ProcessInstanceAdminService",
               "methodName": "getProcessNodes",
               "elementKind": "method",
               "justification": "[JBPM-9705] Able to execute process admin REST API's without valid containerID"
             },
             {
               "code": "java.method.addedToInterface",
   	       "new": "method java.util.Collection<org.jbpm.services.api.admin.TimerInstance> org.jbpm.services.api.admin.ProcessInstanceAdminService::getTimerInstances(java.lang.String, long) throws org.jbpm.services.api.ProcessInstanceNotFoundException, org.jbpm.services.api.IncorrectDeploymentIDException",
   	       "package": "org.jbpm.services.api.admin",
   	       "classSimpleName": "ProcessInstanceAdminService",
   	       "methodName": "getTimerInstances",
   	       "elementKind": "method",
   	       "justification": "[JBPM-9705] Able to execute process admin REST API's without valid containerID"
             },
             {
               "code": "java.method.addedToInterface",
               "new": "method void org.jbpm.services.api.admin.ProcessInstanceAdminService::retriggerNodeInstance(java.lang.String, long, long) throws org.jbpm.services.api.NodeInstanceNotFoundException, org.jbpm.services.api.ProcessInstanceNotFoundException, org.jbpm.services.api.IncorrectDeploymentIDException",
               "package": "org.jbpm.services.api.admin",
               "classSimpleName": "ProcessInstanceAdminService",
               "methodName": "retriggerNodeInstance",
               "elementKind": "method",
               "justification": "[JBPM-9705] Able to execute process admin REST API's without valid containerID"
             },
 	     {
               "code": "java.method.addedToInterface",
   	       "new": "method void org.jbpm.services.api.admin.ProcessInstanceAdminService::triggerNode(java.lang.String, long, long) throws org.jbpm.services.api.NodeNotFoundException, org.jbpm.services.api.ProcessInstanceNotFoundException, org.jbpm.services.api.IncorrectDeploymentIDException",
               "package": "org.jbpm.services.api.admin",
               "classSimpleName": "ProcessInstanceAdminService",
               "methodName": "triggerNode",
               "elementKind": "method",
               "justification": "[JBPM-9705] Able to execute process admin REST API's without valid containerID"
  	     },
 	     {
   	       "code": "java.method.addedToInterface",
               "new": "method void org.jbpm.services.api.admin.ProcessInstanceAdminService::updateTimer(java.lang.String, long, long, long, long, int) throws org.jbpm.services.api.NodeInstanceNotFoundException, org.jbpm.services.api.ProcessInstanceNotFoundException, org.jbpm.services.api.IncorrectDeploymentIDException",
               "package": "org.jbpm.services.api.admin",
               "classSimpleName": "ProcessInstanceAdminService",
               "methodName": "updateTimer",
               "elementKind": "method",
               "justification": "[JBPM-9705] Able to execute process admin REST API's without valid containerID"
             },
 	     {	
   	       "code": "java.method.addedToInterface",
   	       "new": "method void org.jbpm.services.api.admin.ProcessInstanceAdminService::updateTimerRelative(java.lang.String, long, long, long, long, int) throws org.jbpm.services.api.NodeInstanceNotFoundException, org.jbpm.services.api.ProcessInstanceNotFoundException, org.jbpm.services.api.IncorrectDeploymentIDException",
   	       "package": "org.jbpm.services.api.admin",
	       "classSimpleName": "ProcessInstanceAdminService",
               "methodName": "updateTimerRelative",
               "elementKind": "method",
   	       "justification": "[JBPM-9705] Able to execute process admin REST API's without valid containerID"
 	     },
             {
               "code": "java.method.addedToInterface",
               "new": "method java.util.Collection<org.jbpm.services.api.model.NodeInstanceDesc> org.jbpm.services.api.admin.ProcessInstanceAdminService::getActiveNodeInstances(java.lang.String, long) throws org.jbpm.services.api.ProcessInstanceNotFoundException, org.jbpm.services.api.IncorrectDeploymentIDException",
               "package": "org.jbpm.services.api.admin",
               "classSimpleName": "ProcessInstanceAdminService",
               "methodName": "getActiveNodeInstances",
               "elementKind": "method",
               "justification": "[JBPM-9705] Able to execute process admin REST API's without valid containerID"
             }
 	  ]
       }
    }
}
